if (self.CavalryLogger) { CavalryLogger.start_js(["ieQKw"]); }

__d("P2PUserEligibilityStore",["EventEmitter","MercuryIDs","P2PActionConstants","P2PAPI","P2PDispatcher","P2PGKValues"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g,h;c=babelHelpers.inherits(a,b("EventEmitter"));g=c&&c.prototype;function a(){g.constructor.call(this),h={},b("P2PDispatcher").register(this.onEventDispatched.bind(this))}a.prototype.onEventDispatched=function(a){var c=a.data;a=a.type;switch(a){case b("P2PActionConstants").USER_ELIGIBILITY_UDPATED:this.handleEligibilityUpdated(c);this.emit("change");break}};a.prototype.getEligibilityByUserIDs=function(a){var c=[],d,e,f={};for(var g=0;g<a.length;g++)e=a[g],d=h[e],d===undefined&&(h[e]=null,c.push(e)),f[e]=h[e];b("P2PGKValues").P2PEnabled&&c.length&&b("P2PAPI").getUserEligibility({userIDs:c});return f};a.prototype.getEligibilityByUserID=function(a){var b=this.getEligibilityByUserIDs([a]);return b[a]};a.prototype.getEligibilityByThreadID=function(a){return this.getEligibilityByUserID(b("MercuryIDs").getUserIDFromThreadID(a))};a.prototype.handleEligibilityUpdated=function(a){for(var b=0;b<a.length;b++)h[a[b].user_id]=a[b].p2p_eligible};e.exports=new a()}),null);