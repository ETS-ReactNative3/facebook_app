if (self.CavalryLogger) { CavalryLogger.start_js(["ZRq1b"]); }

__d("MontageThreadViewContainerImpl.react",["FluxContainer","MercuryIDs","MontageActions","MontageStore","MontageThreadView.react","React","RelayCompat","RelayMontageEnvironment","MontageThreadViewContainerImplQuery.graphql"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g,h,i=b("RelayCompat").QueryRenderer;b("RelayCompat").graphql;c=b("React").PropTypes;d=babelHelpers.inherits(a,b("React").PureComponent);g=d&&d.prototype;function a(){__p&&__p();var a,c;for(var d=arguments.length,e=new Array(d),f=0;f<d;f++)e[f]=arguments[f];return c=(a=g.constructor).call.apply(a,[this].concat(e)),this.threadIDToMontageThreadID={},this.$2=function(a){a=a.props;var c=b("MercuryIDs").getThreadFBIDFromThreadID(this.props.threadID);this.$3();if(!c)return null;return!a?null:b("React").createElement(b("MontageThreadView.react"),babelHelpers["extends"]({},a,{onResize:this.props.onResize,setThreadID:this.$4,threadID:this.props.threadID}))}.bind(this),this.$4=function(a){var c=b("MercuryIDs").getThreadFBIDFromThreadID(this.props.threadID);this.threadIDToMontageThreadID[c]=a}.bind(this),c}a.getStores=function(){return[b("MontageStore")]};a.calculateState=function(){return{needsUpdating:b("MontageStore").getState().needsUpdating}};a.prototype.render=function(){var a=this.props.threadID;a=b("MercuryIDs").getThreadFBIDFromThreadID(a);return!a?null:b("React").createElement(i,{environment:b("RelayMontageEnvironment"),cacheConfig:{forceFetch:this.$1(a)},query:h||(h={modern:function(){return b("MontageThreadViewContainerImplQuery.graphql")},classic:function(a){var c=b("MontageThreadView.react").getFragment("threadMessages");return{kind:"OperationDefinition",argumentDefinitions:[{defaultValue:null,kind:"LocalArgument",name:"threadFBID"}],name:"MontageThreadViewContainerImplQuery",operation:"query",node:function(){return{children:[{alias:"threadMessages",calls:[{kind:"Call",metadata:{},name:"id",value:{kind:"CallVariable",callVariableName:"threadFBID"}}],children:[].concat.apply([],[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"},a.__frag(c)]),fieldName:"message_thread",kind:"Field",metadata:{canHaveSubselections:!0,inferredRootCallName:"node",inferredPrimaryKey:"id"},type:"MessageThread"}],id:a.__id(),kind:"Fragment",metadata:{},name:"MontageThreadViewContainerImplQuery",type:"Query"}}()}}}),render:this.$2,variables:{threadFBID:a}})};a.prototype.$3=function(){var a=b("MercuryIDs").getThreadFBIDFromThreadID(this.props.threadID),c=this.threadIDToMontageThreadID[a];this.state.needsUpdating[a]&&b("MontageActions").hasUpdated(a);this.state.needsUpdating[a]&&b("MontageActions").hasUpdated(c)};a.prototype.$1=function(a){return!!(this.state.needsUpdating[a]||this.state.needsUpdating[this.threadIDToMontageThreadID[a]])};a.propTypes={onResize:c.func,threadID:c.string.isRequired};e.exports=b("FluxContainer").create(a)}),null);