if (self.CavalryLogger) { CavalryLogger.start_js(["1x\/2E"]); }

__d("GroupsTokenizer.react",["cx","fbt","immutable","React","ReactComposerGroupSearchSource","SearchableEntry","XUIText.react","XUITokenizer.react"],(function(a,b,c,d,e,f,g,h){"use strict";__p&&__p();var i;c=babelHelpers.inherits(a,b("React").PureComponent);i=c&&c.prototype;function a(){__p&&__p();var a,b;for(var c=arguments.length,d=new Array(c),e=0;e<c;e++)d[e]=arguments[e];return b=(a=i.constructor).call.apply(a,[this].concat(d)),this.$3=function(a){if(this.$2(a)!==-1)return;this.$1(this.props.groups.push(a))}.bind(this),this.$4=function(a){a=this.$2(a);if(a===-1)return;this.$1(this.props.groups["delete"](a))}.bind(this),b}a.prototype.$1=function(a){this.props.onChange&&this.props.onChange(a)};a.prototype.$2=function(a){var b=a.getUniqueID();return this.props.groups.findIndex(function(a){return a.getUniqueID()===b})};a.prototype.$5=function(){return this.props.groups.size>=this.props.maxNumberOfGroups};a.prototype.renderNotice=function(){return!this.$5()?null:b("React").createElement("div",{className:"_2pid"},b("React").createElement(b("XUIText.react"),{display:"block",size:"meta1"},h._("You've added the maximum number of groups.")))};a.prototype.render=function(){var a=h._("Choose Groups");return b("React").createElement("div",null,b("React").createElement(b("XUITokenizer.react"),{entries:this.props.groups.toArray(),limit:this.props.maxNumberOfGroups,onAddEntryAttempt:this.$3,onRemoveEntryAttempt:this.$4,placeholder:this.props.placeholder||a,searchSource:new(b("ReactComposerGroupSearchSource"))(this.props.actorID)}),this.renderNotice())};e.exports=a}),null);