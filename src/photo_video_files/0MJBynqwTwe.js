if (self.CavalryLogger) { CavalryLogger.start_js(["YLnr0"]); }

__d("MessengerMarkReadMutation",["RelayCompat","MessengerMarkReadMutation.graphql"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g=b("RelayCompat").commitMutation;b("RelayCompat").graphql;var h={modern:function(){return b("MessengerMarkReadMutation.graphql")},classic:function(a){return{kind:"OperationDefinition",argumentDefinitions:[{defaultValue:null,kind:"LocalArgument",name:"input"}],name:"MessengerMarkReadMutation",operation:"mutation",node:function(){return{calls:[{kind:"Call",metadata:{},name:"message_thread_update_read_state",value:{kind:"CallVariable",callVariableName:"input"}}],children:[{children:[{fieldName:"unread_count",kind:"Field",metadata:{},type:"Int"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"thread",kind:"Field",metadata:{canHaveSubselections:!0,inferredRootCallName:"node",inferredPrimaryKey:"id"},type:"MessageThread"},{fieldName:"client_mutation_id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],kind:"Mutation",metadata:{inputType:"MessageThreadUpdateReadStateData!"},name:"MessengerMarkReadMutation",responseType:"MessageThreadUpdateReadStateResponsePayload"}}()}}},i={thread:{unread_count:0}};function a(a,b){return g(a,{mutation:h,optimisticResponse:i,variables:{input:{thread_id:b.thread_id,update_type:b.update_type}}})}e.exports={commit:a}}),null);